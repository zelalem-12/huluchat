{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects\\\\hulugram\\\\src\\\\components\\\\Statistics.jsx\";\nimport React, { Component } from \"react\";\nimport axios from 'axios';\n\nclass Statistics extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // isLoading: true,\n      statisticsData: {\n        \"downloads\": 1000,\n        \"likes\": 200,\n        \"reviews\": 17,\n        \"verstion\": 6\n      } // error: null\n\n    };\n  } // fetchStatisticsData() {\n  //     // Where we're fetching data from\n  //     axios.get(`https://hulugram-beta.firebaseio.com/appstat.json`)\n  //       // We get the API response and receive data in JSON format...\n  //       .then(response => {\n  //         console.log(response)\n  //         this.setState({\n  //           statisticsData: response.data,\n  //           isLoading: false\n  //         });\n  //       })\n  //       // Catch any errors we hit and update the app\n  //       .catch(error => this.setState({ error, isLoading: false })); \n  //     }\n\n\n  componentDidMount() {\n    // this.fetchStatisticsData();\n    console.log(this.state.statisticsData);\n  }\n\n  render() {\n    const statisticsData = this.state.statisticsData; // if(error )\n    // return (\n    //   <React.Fragment>\n    //   <h1 className=\"loading\">{error.message}</h1>\n    //   </React.Fragment>\n    //   )\n\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"downloadContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"Downloads\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"Latest \\u1201\\u1209\\u130D\\u122B\\u121D Version: \", React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, this.state.appVersoin), \" \"), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"Download \", React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"\\u1201\\u1209\\u130D\\u122B\\u121D\"), \" android applicaiton and start enjoying your life\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"stable\",\n      onClick: () => this.downloadHulugramApp(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \" Stable Version\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"Recommended For Most Users\"))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"current\",\n      onClick: () => this.downloadHulugramApp(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \" Current Version\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"Latest Features\")))),\n    /*isLoading */\n    true ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      className: \"stat\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, statisticsData.downloads), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"Downloads\")), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, statisticsData.likes), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"Likes\")), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, statisticsData.reviews), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"Reviews\")), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, statisticsData.verstion), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"Verstion\")))) // If there is a delay in data, let's let the user know it's loading\n    : React.createElement(\"h1\", {\n      className: \"loading\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"Loading...\"));\n  }\n\n} // {\"downloads\":1000,\"likes\":200,\"reviews\":17,\"verstion\":6}\n\n\nexport default Statistics;","map":{"version":3,"sources":["C:/projects/hulugram/src/components/Statistics.jsx"],"names":["React","Component","axios","Statistics","constructor","props","state","statisticsData","componentDidMount","console","log","render","appVersoin","downloadHulugramApp","downloads","likes","reviews","verstion"],"mappings":";AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,UAAN,SAAyBF,SAAzB,CAAmC;AAC/BG,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAc;AACb;AACCC,MAAAA,cAAc,EAAG;AAAC,qBAAY,IAAb;AAAkB,iBAAQ,GAA1B;AAA8B,mBAAU,EAAxC;AAA2C,oBAAW;AAAtD,OAFL,CAGb;;AAHa,KAAd;AAMH,GAT8B,CAW/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGCC,EAAAA,iBAAiB,GAAG;AACpB;AACCC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKJ,KAAL,CAAWC,cAAvB;AACA;;AAEJI,EAAAA,MAAM,GAAG;AAAA,UACgBJ,cADhB,GAC+C,KAAKD,KADpD,CACgBC,cADhB,EAEP;AACA;AACA;AACA;AACA;AACA;;AACA,WACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEA;AAAK,MAAA,EAAE,EAAC,mBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADA,EAEQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0DAAyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI,KAAKD,KAAL,CAAWM,UAAf,CAAzB,MAFR,EAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCAAb,sDAHA,EAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAQ,MAAA,SAAS,EAAC,QAAlB;AAA2B,MAAA,OAAO,EAAE,MAAI,KAAKC,mBAAL,EAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADA,EAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCAFA,CADA,CAJA,EAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAQ,MAAA,SAAS,EAAC,SAAlB;AAA4B,MAAA,OAAO,EAAE,MAAI,KAAKA,mBAAL,EAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADA,EAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAFA,CADA,CAVA,CAFA;AAmBC;AAAe,WACV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACN;AAAI,MAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKN,cAAc,CAACO,SAApB,CADA,EAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFA,CADA,EAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKP,cAAc,CAACQ,KAApB,CADA,EAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFA,CANA,EAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKR,cAAc,CAACS,OAApB,CADA,EAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFA,CAXA,EAgBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKT,cAAc,CAACU,QAApB,CADA,EAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFA,CAhBA,CADM,CADU,CAwBhB;AAxBgB,MA0Bd;AAAI,MAAA,SAAS,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBA7CF,CADF;AAmDD;;AA3FgC,C,CA6FnC;;;AAEA,eAAed,UAAf","sourcesContent":["\r\nimport React, { Component } from \"react\";\r\nimport axios from 'axios';\r\n\r\nclass Statistics extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state  = {\r\n         // isLoading: true,\r\n          statisticsData : {\"downloads\":1000,\"likes\":200,\"reviews\":17,\"verstion\":6},\r\n         // error: null\r\n            \r\n        }\r\n    }\r\n\r\n    // fetchStatisticsData() {\r\n    //     // Where we're fetching data from\r\n    //     axios.get(`https://hulugram-beta.firebaseio.com/appstat.json`)\r\n    //       // We get the API response and receive data in JSON format...\r\n    //       .then(response => {\r\n    //         console.log(response)\r\n    //         this.setState({\r\n    //           statisticsData: response.data,\r\n    //           isLoading: false\r\n    //         });\r\n    //       })\r\n    //       // Catch any errors we hit and update the app\r\n    //       .catch(error => this.setState({ error, isLoading: false })); \r\n    //     }\r\n\r\n\r\n     componentDidMount() { \r\n     // this.fetchStatisticsData();\r\n      console.log(this.state.statisticsData);\r\n     }\r\n\r\n  render() {\r\n    const { /*isLoading */ statisticsData, /*error */ } = this.state;\r\n    // if(error )\r\n    // return (\r\n    //   <React.Fragment>\r\n    //   <h1 className=\"loading\">{error.message}</h1>\r\n    //   </React.Fragment>\r\n    //   )\r\n    return (\r\n      <React.Fragment>\r\n\r\n      <div id=\"downloadContainer\">\r\n      <h1>Downloads</h1>\r\n              <p>Latest ሁሉግራም Version: <b>{this.state.appVersoin}</b> </p>\r\n      <h3>Download <strong>ሁሉግራም</strong> android applicaiton and start enjoying your life</h3>\r\n      <div >\r\n      <button className=\"stable\" onClick={()=>this.downloadHulugramApp()}>\r\n      <h2> Stable Version</h2>\r\n      <p>Recommended For Most Users</p>\r\n      </button>\r\n      </div>\r\n      <div>\r\n      <button className=\"current\" onClick={()=>this.downloadHulugramApp()}>\r\n      <h2> Current Version</h2>\r\n      <p>Latest Features</p>\r\n      </button>\r\n      </div>\r\n    </div>\r\n      {/*isLoading */ true? (\r\n            <div>\r\n      <ul className=\"stat\">\r\n      <li>\r\n      <h1>{statisticsData.downloads}</h1>\r\n      <p>Downloads</p>\r\n      </li>\r\n\r\n      <li>\r\n      <h1>{statisticsData.likes}</h1>\r\n      <p>Likes</p>\r\n      </li>\r\n\r\n      <li>\r\n      <h1>{statisticsData.reviews}</h1>\r\n      <p>Reviews</p>\r\n      </li>\r\n\r\n      <li>\r\n      <h1>{statisticsData.verstion}</h1>\r\n      <p>Verstion</p>\r\n      </li>\r\n      </ul>\r\n      </div>\r\n      // If there is a delay in data, let's let the user know it's loading\r\n      ) : (\r\n        <h1 className=\"loading\">Loading...</h1>\r\n      )}\r\n\r\n            </React.Fragment>\r\n    ); \r\n  }\r\n}\r\n// {\"downloads\":1000,\"likes\":200,\"reviews\":17,\"verstion\":6}\r\n\r\nexport default Statistics;\r\n"]},"metadata":{},"sourceType":"module"}