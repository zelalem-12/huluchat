{"ast":null,"code":"import _classCallCheck from\"C:\\\\projects\\\\hulugram\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\projects\\\\hulugram\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"C:\\\\projects\\\\hulugram\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"C:\\\\projects\\\\hulugram\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";import _inherits from\"C:\\\\projects\\\\hulugram\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import React,{Component}from\"react\";import axios from'axios';var Statistics=/*#__PURE__*/function(_Component){_inherits(Statistics,_Component);function Statistics(props){var _this;_classCallCheck(this,Statistics);_this=_possibleConstructorReturn(this,_getPrototypeOf(Statistics).call(this,props));_this.state={isLoading:true,statisticsData:{},error:null};return _this;}_createClass(Statistics,[{key:\"fetchStatisticsData\",value:function fetchStatisticsData(){var _this2=this;// Where we're fetching data from\naxios.get(\"https://hulugram-beta.firebaseio.com/appstat.json\")// We get the API response and receive data in JSON format...\n.then(function(response){console.log(response);_this2.setState({statisticsData:response.data,isLoading:false});})// Catch any errors we hit and update the app\n.catch(function(error){return _this2.setState({error:error,isLoading:false});});}},{key:\"componentDidMount\",value:function componentDidMount(){this.fetchStatisticsData();console.log(this.state.statisticsData);}},{key:\"render\",value:function render(){var _this$state=this.state,isLoading=_this$state.isLoading,statisticsData=_this$state.statisticsData,error=_this$state.error;if(error)return React.createElement(React.Fragment,null,React.createElement(\"h1\",{className:\"loading\"},error.message));return React.createElement(React.Fragment,null,React.createElement(\"div\",{id:\"stasticsContainer\"},React.createElement(\"h1\",null,\"Application Status\")),isLoading===true?React.createElement(\"div\",null,React.createElement(\"ul\",{className:\"stat\"},React.createElement(\"li\",null,React.createElement(\"h1\",null,statisticsData.downloads),React.createElement(\"p\",null,\"Downloads\")),React.createElement(\"li\",null,React.createElement(\"h1\",null,statisticsData.likes),React.createElement(\"p\",null,\"Likes\")),React.createElement(\"li\",null,React.createElement(\"h1\",null,statisticsData.reviews),React.createElement(\"p\",null,\"Reviews\")),React.createElement(\"li\",null,React.createElement(\"h1\",null,statisticsData.verstion),React.createElement(\"p\",null,\"Verstion\"))))// If there is a delay in data, let's let the user know it's loading\n:React.createElement(\"h1\",{className:\"loading\"},\"Loading...\"));}}]);return Statistics;}(Component);// {\"downloads\":1000,\"likes\":200,\"reviews\":17,\"verstion\":6}\nexport default Statistics;","map":{"version":3,"sources":["C:/projects/hulugram/src/components/Statistics.jsx"],"names":["React","Component","axios","Statistics","props","state","isLoading","statisticsData","error","get","then","response","console","log","setState","data","catch","fetchStatisticsData","message","downloads","likes","reviews","verstion"],"mappings":"0iBACA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,C,GAEMC,CAAAA,U,oEACF,oBAAYC,KAAZ,CAAkB,4CACd,4EAAMA,KAAN,GACA,MAAKC,KAAL,CAAc,CACZC,SAAS,CAAE,IADC,CAEZC,cAAc,CAAG,EAFL,CAGbC,KAAK,CAAE,IAHM,CAAd,CAFc,aAQjB,C,wFAEqB,iBAClB;AACAN,KAAK,CAACO,GAAN,qDACE;AADF,CAEGC,IAFH,CAEQ,SAAAC,QAAQ,CAAI,CAChBC,OAAO,CAACC,GAAR,CAAYF,QAAZ,EACA,MAAI,CAACG,QAAL,CAAc,CACZP,cAAc,CAAEI,QAAQ,CAACI,IADb,CAEZT,SAAS,CAAE,KAFC,CAAd,EAID,CARH,CASE;AATF,CAUGU,KAVH,CAUS,SAAAR,KAAK,QAAI,CAAA,MAAI,CAACM,QAAL,CAAc,CAAEN,KAAK,CAALA,KAAF,CAASF,SAAS,CAAE,KAApB,CAAd,CAAJ,EAVd,EAWC,C,6DAGgB,CAClB,KAAKW,mBAAL,GACDL,OAAO,CAACC,GAAR,CAAY,KAAKR,KAAL,CAAWE,cAAvB,EACA,C,uCAEK,iBACqC,KAAKF,KAD1C,CACAC,SADA,aACAA,SADA,CACWC,cADX,aACWA,cADX,CAC2BC,KAD3B,aAC2BA,KAD3B,CAEP,GAAGA,KAAH,CACA,MACE,qBAAC,KAAD,CAAO,QAAP,MACA,0BAAI,SAAS,CAAC,SAAd,EAAyBA,KAAK,CAACU,OAA/B,CADA,CADF,CAKA,MACE,qBAAC,KAAD,CAAO,QAAP,MAEA,2BAAK,EAAE,CAAC,mBAAR,EACA,mDADA,CAFA,CAKCZ,SAAS,GAAK,IAAd,CACK,+BACN,0BAAI,SAAS,CAAC,MAAd,EACA,8BACA,8BAAKC,cAAc,CAACY,SAApB,CADA,CAEA,yCAFA,CADA,CAMA,8BACA,8BAAKZ,cAAc,CAACa,KAApB,CADA,CAEA,qCAFA,CANA,CAWA,8BACA,8BAAKb,cAAc,CAACc,OAApB,CADA,CAEA,uCAFA,CAXA,CAgBA,8BACA,8BAAKd,cAAc,CAACe,QAApB,CADA,CAEA,wCAFA,CAhBA,CADM,CAuBN;AAxBC,CA0BC,0BAAI,SAAS,CAAC,SAAd,eA/BF,CADF,CAoCD,C,wBA5EsBrB,S,EA8EzB;AAEA,cAAeE,CAAAA,UAAf","sourcesContent":["\r\nimport React, { Component } from \"react\";\r\nimport axios from 'axios';\r\n\r\nclass Statistics extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state  = {\r\n          isLoading: true,\r\n          statisticsData : {},\r\n         error: null\r\n            \r\n        };\r\n    }\r\n\r\n    fetchStatisticsData() {\r\n        // Where we're fetching data from\r\n        axios.get(`https://hulugram-beta.firebaseio.com/appstat.json`)\r\n          // We get the API response and receive data in JSON format...\r\n          .then(response => {\r\n            console.log(response)\r\n            this.setState({\r\n              statisticsData: response.data,\r\n              isLoading: false\r\n            });\r\n          })\r\n          // Catch any errors we hit and update the app\r\n          .catch(error => this.setState({ error, isLoading: false })); \r\n        }\r\n\r\n\r\n     componentDidMount() { \r\n       this.fetchStatisticsData();\r\n      console.log(this.state.statisticsData);\r\n     }\r\n\r\n  render() {\r\n    const {isLoading, statisticsData, error } = this.state;\r\n    if(error )\r\n    return (\r\n      <React.Fragment>\r\n      <h1 className=\"loading\">{error.message}</h1>\r\n      </React.Fragment>\r\n      )\r\n    return (\r\n      <React.Fragment>\r\n\r\n      <div id=\"stasticsContainer\">\r\n      <h1>Application Status</h1>\r\n      </div>\r\n      {isLoading === true? (\r\n            <div>\r\n      <ul className=\"stat\">\r\n      <li>\r\n      <h1>{statisticsData.downloads}</h1>\r\n      <p>Downloads</p>\r\n      </li>\r\n\r\n      <li>\r\n      <h1>{statisticsData.likes}</h1>\r\n      <p>Likes</p>\r\n      </li>\r\n\r\n      <li>\r\n      <h1>{statisticsData.reviews}</h1>\r\n      <p>Reviews</p>\r\n      </li>\r\n\r\n      <li>\r\n      <h1>{statisticsData.verstion}</h1>\r\n      <p>Verstion</p>\r\n      </li>\r\n      </ul>\r\n      </div>\r\n      // If there is a delay in data, let's let the user know it's loading\r\n      ) : (\r\n        <h1 className=\"loading\">Loading...</h1>\r\n      )}\r\n            </React.Fragment>\r\n    ); \r\n  }\r\n}\r\n// {\"downloads\":1000,\"likes\":200,\"reviews\":17,\"verstion\":6}\r\n\r\nexport default Statistics;\r\n"]},"metadata":{},"sourceType":"module"}