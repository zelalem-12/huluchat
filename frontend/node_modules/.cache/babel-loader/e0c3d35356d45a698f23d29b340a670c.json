{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects\\\\hulugram\\\\src\\\\components\\\\Statistics.jsx\";\nimport React, { Component } from \"react\";\nimport axios from 'axios';\nimport './statistics.css';\n\nclass Statistics extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      statisticsData: {\n        \"downloads\": 1000,\n        \"likes\": 200,\n        \"reviews\": 17,\n        \"verstion\": 6\n      }\n    };\n  }\n\n  fetchStatisticsData() {\n    // Where we're fetching data from\n    axios.get(\"https://hulugram-beta.firebaseio.com/appstat.json\") // We get the API response and receive data in JSON format...\n    .then(response => {\n      console.log(response);\n      this.setState({\n        statisticsData: response.data\n      });\n    }) // Catch any errors we hit and update the app\n    .catch(error => console.log(error));\n  }\n\n  componentDidMount() {\n    this.fetchStatisticsData();\n  }\n\n  render() {\n    const statisticsData = this.state.statisticsData;\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"stasticsContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, \"Application Status\"), React.createElement(\"ul\", {\n      className: \"stat\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, statisticsData.downloads), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"Downloads\")), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, statisticsData.likes), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"Likes\")), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, statisticsData.reviews), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"Reviews\")), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, statisticsData.verstion), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"Verstion\")))));\n  }\n\n} // {\"downloads\":1000,\"likes\":200,\"reviews\":17,\"verstion\":6}\n\n\nexport default Statistics;","map":{"version":3,"sources":["C:/projects/hulugram/src/components/Statistics.jsx"],"names":["React","Component","axios","Statistics","constructor","props","state","statisticsData","fetchStatisticsData","get","then","response","console","log","setState","data","catch","error","componentDidMount","render","downloads","likes","reviews","verstion"],"mappings":";AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,kBAAP;;AAEA,MAAMC,UAAN,SAAyBF,SAAzB,CAAmC;AAC/BG,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAc;AACZC,MAAAA,cAAc,EAAG;AAAC,qBAAY,IAAb;AAAkB,iBAAQ,GAA1B;AAA8B,mBAAU,EAAxC;AAA2C,oBAAW;AAAtD;AADL,KAAd;AAIH;;AAEDC,EAAAA,mBAAmB,GAAG;AAClB;AACAN,IAAAA,KAAK,CAACO,GAAN,sDACE;AADF,KAEGC,IAFH,CAEQC,QAAQ,IAAI;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACA,WAAKG,QAAL,CAAc;AACZP,QAAAA,cAAc,EAAEI,QAAQ,CAACI;AADb,OAAd;AAGD,KAPH,EAQE;AARF,KASGC,KATH,CASSC,KAAK,IAAIL,OAAO,CAACC,GAAR,CAAYI,KAAZ,CATlB;AAUC;;AAGJC,EAAAA,iBAAiB,GAAG;AAClB,SAAKV,mBAAL;AACD;;AAEJW,EAAAA,MAAM,GAAG;AAAA,UACAZ,cADA,GACmB,KAAKD,KADxB,CACAC,cADA;AAGP,WACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEA;AAAK,MAAA,EAAE,EAAC,mBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADA,EAGA;AAAI,MAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKA,cAAc,CAACa,SAApB,CADA,EAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFA,CADA,EAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKb,cAAc,CAACc,KAApB,CADA,EAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFA,CANA,EAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKd,cAAc,CAACe,OAApB,CADA,EAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFA,CAXA,EAeA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKf,cAAc,CAACgB,QAApB,CADA,EAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFA,CAfA,CAHA,CAFA,CADF;AA6BD;;AA5DgC,C,CA8DnC;;;AAEA,eAAepB,UAAf","sourcesContent":["\r\nimport React, { Component } from \"react\";\r\nimport axios from 'axios';\r\nimport './statistics.css';\r\n\r\nclass Statistics extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state  = {\r\n          statisticsData : {\"downloads\":1000,\"likes\":200,\"reviews\":17,\"verstion\":6}\r\n            \r\n        };\r\n    }\r\n\r\n    fetchStatisticsData() {\r\n        // Where we're fetching data from\r\n        axios.get(`https://hulugram-beta.firebaseio.com/appstat.json`)\r\n          // We get the API response and receive data in JSON format...\r\n          .then(response => {\r\n            console.log(response)\r\n            this.setState({\r\n              statisticsData: response.data,\r\n            });\r\n          })\r\n          // Catch any errors we hit and update the app\r\n          .catch(error => console.log(error)); \r\n        }\r\n\r\n\r\n     componentDidMount() { \r\n       this.fetchStatisticsData();\r\n     }\r\n\r\n  render() {\r\n    const {statisticsData } = this.state;\r\n  \r\n    return (\r\n      <React.Fragment>\r\n\r\n      <div id=\"stasticsContainer\">\r\n      <h1>Application Status</h1>\r\n           \r\n      <ul className=\"stat\">\r\n      <li>\r\n      <h2>{statisticsData.downloads}</h2>\r\n      <p>Downloads</p>\r\n      </li>\r\n\r\n      <li>\r\n      <h2>{statisticsData.likes}</h2>\r\n      <p>Likes</p>\r\n      </li>\r\n\r\n      <li>\r\n      <h1>{statisticsData.reviews}</h1>\r\n      <p>Reviews</p>\r\n      </li>\r\n      <li>\r\n      <h1>{statisticsData.verstion}</h1>\r\n      <p>Verstion</p>\r\n      </li>\r\n      </ul>\r\n      </div>\r\n            </React.Fragment>\r\n    ); \r\n  }\r\n}\r\n// {\"downloads\":1000,\"likes\":200,\"reviews\":17,\"verstion\":6}\r\n\r\nexport default Statistics;\r\n"]},"metadata":{},"sourceType":"module"}