{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects\\\\hulugram\\\\src\\\\components\\\\Statistics.jsx\";\nimport React, { Component } from \"react\";\nimport axios from 'axios';\n\nclass Statistics extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      statisticsData: {}\n    };\n  }\n\n  fetchStatisticsData() {\n    // Where we're fetching data from\n    axios.get(\"https://hulugram-beta.firebaseio.com/appstat.json\") // We get the API response and receive data in JSON format...\n    .then(response => {\n      console.log(response);\n      this.setState({\n        statisticsData: response.data\n      });\n    }) // Catch any errors we hit and update the app\n    .catch(error => {\n      console.log(error);\n    });\n  }\n\n  componentDidMount() {\n    this.fetchStatisticsData();\n  }\n\n  render() {\n    const data = this.state.data;\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, data.downloads, \"  downloads\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, data.likes, \"  lo\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, data.reviews, \"  downloads\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, data.verstion, \"  downloads\"));\n  }\n\n} // {\"downloads\":1000,\"likes\":200,\"reviews\":17,\"verstion\":6}\n\n\nexport default Statistics;","map":{"version":3,"sources":["C:/projects/hulugram/src/components/Statistics.jsx"],"names":["React","Component","axios","Statistics","constructor","props","state","statisticsData","fetchStatisticsData","get","then","response","console","log","setState","data","catch","error","componentDidMount","render","downloads","likes","reviews","verstion"],"mappings":";AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,UAAN,SAAyBF,SAAzB,CAAmC;AAC/BG,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAc;AACVC,MAAAA,cAAc,EAAG;AADP,KAAd;AAGH;;AAEDC,EAAAA,mBAAmB,GAAG;AAClB;AACAN,IAAAA,KAAK,CAACO,GAAN,sDACE;AADF,KAEGC,IAFH,CAEQC,QAAQ,IAAI;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACA,WAAKG,QAAL,CAAc;AAACP,QAAAA,cAAc,EAAEI,QAAQ,CAACI;AAA1B,OAAd;AACD,KALH,EAME;AANF,KAOGC,KAPH,CAOSC,KAAK,IAAI;AACRL,MAAAA,OAAO,CAACC,GAAR,CAAYI,KAAZ;AACP,KATH;AAUC;;AACLC,EAAAA,iBAAiB,GAAG;AACxB,SAAKV,mBAAL;AACK;;AACHW,EAAAA,MAAM,GAAG;AAAA,UACEJ,IADF,GACU,KAAKT,KADf,CACES,IADF;AAEP,WACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIA,IAAI,CAACK,SAAT,gBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIL,IAAI,CAACM,KAAT,SAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIN,IAAI,CAACO,OAAT,gBAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIP,IAAI,CAACQ,QAAT,gBAJF,CADF;AAQD;;AAlCgC,C,CAwCnC;;;AAEA,eAAepB,UAAf","sourcesContent":["\r\nimport React, { Component } from \"react\";\r\nimport axios from 'axios';\r\n\r\nclass Statistics extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state  = {\r\n            statisticsData : {}\r\n        }\r\n    }\r\n\r\n    fetchStatisticsData() {\r\n        // Where we're fetching data from\r\n        axios.get(`https://hulugram-beta.firebaseio.com/appstat.json`)\r\n          // We get the API response and receive data in JSON format...\r\n          .then(response => {\r\n            console.log(response)\r\n            this.setState({statisticsData: response.data})\r\n          })\r\n          // Catch any errors we hit and update the app\r\n          .catch(error => {\r\n                  console.log(error)\r\n          });\r\n        }\r\n    componentDidMount() { \r\nthis.fetchStatisticsData();\r\n    }\r\n  render() {\r\n      const {data} = this.state;\r\n    return (\r\n      <React.Fragment>\r\n        <p>{data.downloads }  downloads</p>\r\n        <p>{data.likes }  lo</p>\r\n        <p>{data.reviews }  downloads</p>\r\n        <p>{data.verstion }  downloads</p>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n// {\"downloads\":1000,\"likes\":200,\"reviews\":17,\"verstion\":6}\r\n\r\nexport default Statistics;\r\n"]},"metadata":{},"sourceType":"module"}